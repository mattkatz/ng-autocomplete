{"name":"ng-autocomplete","tagline":"An autocomplete tagging directive","body":"#angular autocomplete \r\nI'm creating this directive because I want to do tagging on [Orbital Feed Reader](https://mattkatz.github.io/Orbital-Feed-Reader) and it seems like a tagging input is a clear option for a directive. It should behave pretty similar to how suggest.js works in WordPress.\r\n\r\nI'm trying out test driven development on this and probably making a complete hash of it. Any help is greatly appreciated!\r\n\r\n#How should it work\r\n\r\n`<mk-autocomplete data-ng-model=\"tags\" data-suggestion-source=\"availableTags\" multiple=\"true\" data-multiple-separator=\",\" data-min-length=\"2\" data-select-class=\"selected\"/>`\r\n\r\n## ng-model\r\nStores accepted suggestions in ng-model. As someone types, nothing affects ng-model till they either accept a suggestion or type the multiple separator. If acceptMultiple is false, stores everything.\r\n\r\n## onAccept - not working yet, still todo\r\ntriggers when user does any of the accept actions: tab, enters multiple sep, hits down/up arrows and then enter.\r\n\r\n## suggestionSource\r\naccepts an array.\r\nTodo: pass in a function that accepts 0 or 1 parameters. The function will be passed the current fragment\r\n\r\n## multiple\r\nShould we accept multiples?\r\n\r\n## multipleSeparator\r\nDefault of \",\" but we can concatenate with anything\r\n\r\n## minLength\r\ndefault of 2 characters before we do anything\r\n\r\n## selectClass\r\nDefault is \"selected\" but you can pass in whatever you like.\r\n\r\n# Use this however you want\r\nThis code is released into the great public domain. \r\nIf you make changes, please contribute them back. Don't be a jerk.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}